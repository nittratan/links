 import pandas as pd
import re
from transformers import pipeline

# Load CSV
df = pd.read_csv("results.csv")

# Categories we want to extract
CATEGORIES = [
    "Visit Reason",
    "Diagnosis",
    "Past Medical History",
    "Clinical Details",
    "Vital Signs",
    "Exam Results",
    "Lab Results",
    "Imaging Test Results",
    "Hospital and ED course",
    "Discharge Plan",
    "Full HPI",
    "Full Assessment and Plan"
]

# Initialize zero-shot classification model for category guessing
classifier = pipeline("zero-shot-classification", model="facebook/bart-large-mnli")

def extract_info(text):
    # Ensure string and remove extra spaces
    text = str(text).strip()
    
    # Default empty output for all categories
    result = {cat: [] for cat in CATEGORIES}
    
    # Step 1: Regex-based extraction (when headings exist)
    for cat in CATEGORIES:
        pattern = rf"(?i){cat}\s*[:\-]\s*(.*?)(?=\n[A-Z][a-zA-Z ]*[:\-]|\Z)"
        match = re.search(pattern, text, re.S)
        if match:
            value = match.group(1).strip()
            if value:
                result[cat] = [v.strip() for v in value.split("\n") if v.strip()]
    
    # Step 2: If still empty, use model to guess category from context
    for cat in CATEGORIES:
        if not result[cat]:  # if no direct heading match
            classification = classifier(text, CATEGORIES, multi_label=True)
            # If the model thinks this category is relevant, extract potential sentences
            if cat in classification["labels"][:3]:  # top 3 matches
                sentences = [s.strip() for s in re.split(r'[.\n]', text) if s.strip()]
                guessed = [s for s in sentences if re.search(cat.split()[0], s, re.I)]
                result[cat] = guessed if guessed else []
    
    return result

# Apply extraction to each record and save under the model name as column
MODEL_NAME = "distilbert-base-uncased"  # Example model name
df[MODEL_NAME] = df["context"].apply(lambda x: extract_info(x))

# Save updated CSV
df.to_csv("results_with_extraction.csv", index=False)

print("âœ… Extraction completed. Results saved to results_with_extraction.csv")
